// Generated by ts-to-zod
import { z } from 'zod';

export const loginInputDtoSchema = z.object({
  userId: z.string().min(1),
});

export const userDtoSchema = z.object({
  id: z.string().uuid(),
  username: z.string(),
  email: z.string().email(),
  createdAt: z.string().datetime({ offset: true }).optional(),
});

export const userInputDtoSchema = z.object({
  username: z.string().min(3).max(50),
  email: z.string().email(),
});

export const productDtoSchema = z.object({
  id: z.string().uuid(),
  name: z.string(),
  description: z.string().optional(),
  price: z.number(),
  stock: z.number(),
  createdAt: z.string().datetime({ offset: true }).optional(),
});

export const productInputDtoSchema = z.object({
  name: z.string().min(1).max(100),
  description: z.string().max(500).optional(),
  price: z.number(),
  stock: z.number(),
});

export const orderItemDtoSchema = z.object({
  productId: z.string().uuid(),
  quantity: z.number(),
  price: z.number(),
});

export const orderInputDtoSchema = z.object({
  userId: z.string().uuid(),
  items: z.array(
    z.object({
      productId: z.string().uuid(),
      quantity: z.number(),
    })
  ),
});

export const postDtoSchema = z.object({
  id: z.string().uuid(),
  title: z.string(),
  content: z.string(),
  userId: z.string().uuid(),
  author: userDtoSchema.optional(),
  status: z.union([z.literal('DRAFT'), z.literal('PUBLISHED')]),
  tags: z.array(z.string()).optional(),
  createdAt: z.string().datetime({ offset: true }),
  updatedAt: z.string().datetime({ offset: true }).optional(),
});

export const postInputDtoSchema = z.object({
  title: z.string().min(1).max(200),
  content: z.string().min(1),
  status: z.union([z.literal('DRAFT'), z.literal('PUBLISHED')]),
  tags: z.array(z.string()).optional(),
});

export const commentDtoSchema = z.object({
  id: z.string().uuid(),
  content: z.string(),
  userId: z.string().uuid(),
  postId: z.string().uuid(),
  author: userDtoSchema.optional(),
  createdAt: z.string().datetime({ offset: true }),
  updatedAt: z.string().datetime({ offset: true }).optional(),
});

export const commentInputDtoSchema = z.object({
  content: z.string().min(1).max(1000),
});

export const getPostsQueryParamsSchema = z.object({
  page: z.number().optional().default(1),
  limit: z.number().optional().default(10),
});

export const orderDtoSchema = z.object({
  id: z.string().uuid(),
  userId: z.string().uuid(),
  items: z.array(orderItemDtoSchema),
  totalAmount: z.number(),
  status: z.union([z.literal('PENDING'), z.literal('PROCESSING'), z.literal('COMPLETED'), z.literal('CANCELLED')]),
  createdAt: z.string().datetime({ offset: true }).optional(),
});
